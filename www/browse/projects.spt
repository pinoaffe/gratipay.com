from collections import OrderedDict
from gratipay.utils import get_featured_projects, icons, tabs
import random

[---]
PROJECTS_PER_PAGE = 10

# Can't factor this out because of translations?
i18ned_statuses = { "approved": _("Approved")
                  , "unreviewed" : _("Unreviewed")
                  , "rejected": _("Rejected")
                  , "featured": _("Featured")
                   }

status_filter = request.qs.get('status')
status_filter_active = (status_filter and status_filter in ['unreviewed', 'rejected', 'approved'])

page = request.qs.get('page', 1)
try:
    page = int(page)
except ValueError:
    page = 1

if status_filter_active:
    status_value = {
        'unreviewed': None,
        'rejected': False,
        'approved': True
    }[status_filter]

    total_project_count = website.db.one("""

        SELECT COUNT(1)
          FROM teams
         WHERE is_approved IS %s
           AND not is_closed

    """, (status_value, ))

    limit, offset = PROJECTS_PER_PAGE, (page - 1) * PROJECTS_PER_PAGE

    projects = website.db.all("""

        SELECT teams.*::teams
          FROM teams
         WHERE is_approved IS %s
           AND not is_closed
      ORDER BY id DESC
         LIMIT %s
        OFFSET %s

    """, (status_value, limit, offset))

else:
    projects = get_featured_projects(website.db)

def tab_html(key, tab):
    status = icons.REVIEW_MAP[key]
    return '<span class="status-icon {}">{}</span> {}'.format( status
                                                             , icons.STATUS_ICONS[status]
                                                             , i18ned_statuses[key]
                                                              )

tabs = tabs.make(tab_html, 'status', status_filter,
                 'featured', 'approved', 'unreviewed', 'rejected')

title = _("Projects")
banner = _("Browse")
suppress_sidebar = True
page_id = "browse-projects"
[---] text/html
{% from "templates/nav-tabs.html" import nav_tabs with context %}
{% extends "templates/base.html" %}
{% block head_early %}
    {% if website.optimizely_id and request.headers.get('DNT') != '1' %}
    <script src="//cdn.optimizely.com/js/{{ website.optimizely_id }}.js"></script>
    {% endif %}
{% endblock %}

{% block content %}
<form action="/apply" class="apply-button">
    <button type="submit">{{ _("Fund Your Project") }}</button>
</form>

{{ nav_tabs(tabs) }}

<table class="listing">
    {% set project_list = projects %}
    {% set start_index = ((page - 1) * PROJECTS_PER_PAGE) + 1 %}
    {% include "templates/project-listing.html" %}
</table>

{% if status_filter_active and (total_project_count > PROJECTS_PER_PAGE) %}
    {% set total_project_count = total_project_count %}
    {% set projects_per_page = PROJECTS_PER_PAGE %}
    {% set current_page = page %}
    {% set status_filter = status_filter %}
    {% include "templates/project-pagination.html" %}
{% endif %}

{% endblock %}
